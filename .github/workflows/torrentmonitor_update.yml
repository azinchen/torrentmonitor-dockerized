name: Update TorrentMonitor version

on:
  schedule:
    - cron: 58 * * * *

jobs:
  update_torrentmonitor:
    name: Update TorrentMonitor verions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Update torrentmonitor version
        id: downloadtorrentmonitor
        shell: bash
        run: |
          wget -q http://korphome.ru/torrent_monitor/tm-latest.zip -qO /tmp/tm-latest.zip
          unzip -q /tmp/tm-latest.zip -d /tmp/

          TM_VERSION=$(jq -r '.system' /tmp/TorrentMonitor-master/version.txt)
          echo "::set-output name=tm_version::${TM_VERSION}"

          DATE=$(head -n 1 /tmp/TorrentMonitor-master/changelog.txt | awk '{print $1;}')
          echo "::set-output name=date::${DATE}"

          sed "s/\(ENV VERSION=*\)[^ ]*/\1\"${TM_VERSION}\"/" < Dockerfile > /tmp/Dockerfile.tmp
          sed "s/\(    RELEASE_DATE=*\)[^ ]*/\1\"${DATE}\"/" < /tmp/Dockerfile.tmp > Dockerfile

          PR_BRANCH="tmupdatebot/torrentmonitorupdate-${TM_VERSION}"
          echo "::set-output name=pr_branch::${PR_BRANCH}"

          echo "Base pr_branch=${PR_BRANCH}, date=${DATE}, tm_version=${TM_VERSION}"

      - name: Create Pull Request, Bump tm-latest.zip, torrentmonitor version ${{ steps.downloadtorrentmonitor.outputs.tm_version }}
        uses: peter-evans/create-pull-request@v3.12.1
        with:
          branch: ${{ steps.downloadtorrentmonitor.outputs.pr_branch }}
          commit-message: TM -> ${{ steps.downloadtorrentmonitor.outputs.tm_version }}
          delete-branch: true
          title: Bump TM to version ${{ steps.downloadtorrentmonitor.outputs.tm_version }}
          body: |
            Bump tm-latest.zip, version ${{ steps.downloadtorrentmonitor.outputs.tm_version }}, date ${{ steps.downloadtorrentmonitor.outputs.date }}

            - Auto-generated by [create-pull-request](https://github.com/peter-evans/create-pull-request)
          labels: |
            dependencies
            github_actions
            release
